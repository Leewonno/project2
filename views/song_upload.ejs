<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>곡 업로드</title>
</head>
<body>
    <%- contentFor('body') %>
    <section>
        <form class="song_upload">
            <input type="text" id="title" placeholder="곡 제목">
            <input type="text" id="artist" placeholder="아티스트 명">
            <input type="text" id="album" placeholder="앨범 명">
            <div id="lyrics" contenteditable="true"></div>
            <input type="text" id="writer" placeholder="작사가">
            <input type="text" id="composer" placeholder="작곡가">
            <select id="genre">
                <option>발라드</option>
                <option>댄스</option>
                <option>랩/힙합</option>
                <option>R&B</option>
                <option>인디음악</option>
                <option>록/메탈</option>
                <option>트로트</option>
                <option>포크</option>
                <option>POP</option>
                <option>컨트리</option>
                <option>EDM</option>
                <option>클래식</option>
                <option>재즈</option>
                <option>CCM</option>
                <option>J-POP</option>
                <option>C-POP</option>
            </select>
            <input type="text" id="playtime" placeholder="재생시간">
            <input type="date" id="release_date" placeholder="발매일">
            <!-- 노래 커버 이미지 업로드 -->
            이미지
            <input type="file" id="cover" name="imgfile"><button type="button" onclick="imgUpload()">업로드</button>
            노래
            <input type="file" id="song" name="songfile"><button type="button" onclick="audioUpload()">업로드</button>            
        </form>
        <button type="button" onclick="upload()">업로드</button>
    </section>

    <%- contentFor('player') %>

    <script id="sc">
        let img_url;
        let audio_url;

        async function imgUpload(event) {
            try {
                const file = document.querySelector('#cover');
                console.log(file.files[0]);

                const formData = new FormData();
                //append(key, value)
                //!중요: 파일은 항상 제일 마지막에 선언
                formData.append('imgfile', file.files[0]);

                const res = await axios({
                    method: 'POST',
                    url: '/dynamic/img',
                    data: formData,
                    headers: {
                        'Content-Type': 'multipart/form-data',
                    },
                });
                console.log('res', res);
                img_url = res.data.location;
            } catch (error) {
                console.log(error)
            }
        
        }

        async function audioUpload(event) {
            try {
                const file = document.querySelector('#song');
                console.log(file.files[0]);

                const formData = new FormData();
                //append(key, value)
                //!중요: 파일은 항상 제일 마지막에 선언
                formData.append('songfile', file.files[0]);

                const res = await axios({
                    method: 'POST',
                    url: '/dynamic/song',
                    data: formData,
                    headers: {
                        'Content-Type': 'multipart/form-data',
                    },
                });
                console.log('res', res);
                audio_url = res.data.location;
            } catch (error) {
                console.log(error)
            }
        }

        async function upload(){
            await imgUpload();
            await audioUpload();
            
            const title = document.getElementById("title").value;
            const artist = document.getElementById("artist").value;
            const album = document.getElementById("album").value;
            const lyrics = document.getElementById('lyrics').innerHTML;
            const writer = document.getElementById("writer").value;
            const composer = document.getElementById("composer").value;
            const genre = document.getElementById("genre").value;
            const playtime = document.getElementById("playtime").value;
            const release_date = document.getElementById("release_date").value;
            const cover_url = img_url;
            const song_url = audio_url;
            console.log('cover', cover_url);
            console.log('song_url', song_url)
            // const song_url

            // const test = "https://kdt-wonno2.s3.ap-northeast-2.amazonaws.com/audio/DICE.mp3"
            // const test2 = test.split("/")
            // console.log(test2[3] + "/" + test2[4]);

            try{
                const res = await axios({
                    method: 'POST',
                    url: '/song/upload',
                    data: {
                        title, 
                        artist, 
                        album, 
                        lyrics, 
                        writer, 
                        composer, 
                        genre, 
                        playtime, 
                        release_date, 
                        cover_url: img_url, 
                        song_url: audio_url
                    }
                });
                console.log(res);
                if(res){
                    alert("완료");
                }
                else{
                    alert("실패");
                }
            }catch(err){
                console.log(err);
            }
            


            console.log("실행");
        }

        document.getElementById('lyrics').addEventListener('paste', function(event) {
            event.preventDefault();

            // 클립보드에서 복사된 텍스트 얻기
            var pastedData = event.clipboardData ||  window.clipboardData;
            var pastedText = pastedData.getData('text/html');

            // 스타일 속성만 제거하고 내용을 유지하는 함수
            function removeStyle(html) {
                var tmp = document.createElement('div');
                tmp.innerHTML = html;
                
                // 모든 요소의 style 속성 제거
                var elementsWithStyle = tmp.querySelectorAll('*[style]');
                    elementsWithStyle.forEach(function (element) {
                    element.removeAttribute('style');
                });
                
                return tmp.innerHTML;
            }

            // 스타일이 제거된 텍스트를 contenteditable 요소에 삽입
            var sanitizedText = removeStyle(pastedText);
            document.execCommand('insertHTML', false, sanitizedText);

            // window.document.execCommand('insertHTML', false,  div);

        });
    </script>
</body>
</html>