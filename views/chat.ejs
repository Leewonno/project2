<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="/css/chat.css" />
    <title>채팅방</title>
  </head>
  <body>
    <div id="main">
      <ul id="lists"></ul>
    </div>
    <div id="body">
      <div id="msg">
        <div id="notice"></div>
      </div>
      <form id="chat">
        <input type="text" id="message" placeholder="메세지 입력" />
        <button>입력</button>
      </form>
    </div>

    <script>
      const socket = io();
      const roomForm = document.querySelector('#room');
      const chatForm = document.querySelector('#chat');
      const msg = document.querySelector('#msg');
      const notice = document.querySelector('#notice');
      // const roomName = roomForm.querySelector('#roomName');
      let myName;

      (function () {
        const userName = window.localStorage.getItem('token');

        socket.emit('create', userName);
      })();

      //룸리스트
      // socket.on('roomList', (roomLists) => {
      //   console.log(roomLists);
      //   const lists = document.querySelector('#lists');
      //   lists.textContent = '';
      //   roomLists.forEach((roomList) => {
      //     const li = document.createElement('li');
      //     li.textContent = `${roomList} 와 닉네임 입력 후 입장`;
      //     lists.appendChild(li);
      //   });
      // });

      //사용자 리스트
      socket.on('userList', (userLists) => {
        console.log(userLists);
        const lists = document.querySelector('#userList');
        lists.textContent = '';
        let options = `<option value="all">전체</option>`;
        for (let i of userLists) {
          options += `<option value="${i.key}">${i.name}</option>`;
        }
        lists.innerHTML = options;
      });
      //메세지 띄우기
      socket.on('newMessage', (message, nick, bool) => {
        console.log(message, nick);
        const div = document.createElement('div');
        const p = document.createElement('p');
        if (myName === nick) {
          //내가입력한 텍스트
          div.classList.add('my-chat');
        } else {
          div.classList.add('other-chat');
        }

        //채팅 텍스트
        p.textContent = `${nick} : ${message}`;
        div.appendChild(p);
        msg.appendChild(div);
      });

      //입장 메세지 이벤트
      socket.on('notice', (message) => {
        const div = document.createElement('div');
        const p = document.createElement('p');
        p.textContent = message;
        div.appendChild(p);
        notice.appendChild(div);
      });

      ///폼 이벤트
      chatForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const user = document.querySelector('#userList');
        const message = document.querySelector('#message');
        console.log(user.value);
        const msg = {
          nick: myName,
          user: user.value,
          message: message.value,
        };
        socket.emit('sendMessage', msg);
        message.value = '';
      });
    </script>
  </body>
</html>
